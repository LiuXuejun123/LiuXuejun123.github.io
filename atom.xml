<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://liuxuejun123.github.io/</id>
    <title>Liu Xuejun&apos;s Blog</title>
    <updated>2020-06-23T11:42:35.670Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://liuxuejun123.github.io/"/>
    <link rel="self" href="https://liuxuejun123.github.io/atom.xml"/>
    <subtitle>念念不忘，必有回响</subtitle>
    <logo>https://liuxuejun123.github.io/images/avatar.png</logo>
    <icon>https://liuxuejun123.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Liu Xuejun&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[SLAM-COOKBOOK------贝叶斯滤波]]></title>
        <id>https://liuxuejun123.github.io/post/slam-cookbook-bei-xie-si-lu-bo/</id>
        <link href="https://liuxuejun123.github.io/post/slam-cookbook-bei-xie-si-lu-bo/">
        </link>
        <updated>2020-06-20T12:44:19.000Z</updated>
        <content type="html"><![CDATA[<h2 id="贝叶斯公式">贝叶斯公式</h2>
<figure data-type="image" tabindex="1"><img src="https://liuxuejun123.github.io//post-images/1592657208463.PNG" alt="" loading="lazy"></figure>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>)</mo><mo>=</mo><mi>P</mi><mo>(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>y</mi><mo>)</mo><mi>P</mi><mo>(</mo><mi>y</mi><mo>)</mo><mo>=</mo><mi>P</mi><mo>(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>)</mo><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">P(x, y)=P(x | y) P(y)=P(y | x) P(x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>y</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo>(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>)</mo><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mrow><mi>P</mi><mo>(</mo><mi>y</mi><mo>)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mtext> likelihood </mtext><mo>⋅</mo><mtext> prior </mtext></mrow><mtext> evidence </mtext></mfrac></mrow><annotation encoding="application/x-tex">P(x | y)=\frac{P(y | x) P(x)}{P(y)}=\frac{\text { likelihood } \cdot \text { prior }}{\text { evidence }}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> evidence </span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> likelihood </span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord"> prior </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>y</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo>(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>)</mo><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mrow><mi>P</mi><mo>(</mo><mi>y</mi><mo>)</mo></mrow></mfrac><mo>=</mo><mi>η</mi><mi>P</mi><mo>(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>)</mo><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">P(x | y)=\frac{P(y | x) P(x)}{P(y)}=\eta P(y | x) P(x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi><mo>=</mo><mi>P</mi><mo>(</mo><mi>y</mi><msup><mo>)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mfrac><mn>1</mn><mrow><munder><mo>∑</mo><mi>x</mi></munder><mi>P</mi><mo>(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>)</mo><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\eta=P(y)^{-1}=\frac{1}{\sum_{x} P(y | x) P(x)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30715em;vertical-align:-0.9857100000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9857100000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>延深一下</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo>(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">,</mo><mi>z</mi><mo>)</mo><mi>P</mi><mo>(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo>)</mo></mrow><mrow><mi>P</mi><mo>(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo>)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(x | y, z)=\frac{P(y | x, z) P(x | z)}{P(y | z)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>条件独立</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo>)</mo><mo>=</mo><mi>P</mi><mo>(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo>)</mo><mi>P</mi><mo>(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">P(x, y | z)=P(x | z) P(y | z)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span></span></p>
<p>相当于</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo>)</mo><mo>=</mo><mi>P</mi><mo>(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo separator="true">,</mo><mi>y</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">P(x | z)=P(x | z, y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo>)</mo><mo>=</mo><mi>P</mi><mo>(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo separator="true">,</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">P(y | z)=P(y | z, x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="机器人与环境交互">机器人与环境交互</h2>
<p>1.机器人的实际状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span></p>
<p>2.机器人通过传感器的测量 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span></p>
<p>3.机器人的控制数据 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span></p>
<p>4.马尔可夫性 在一个时刻的状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 能够很好的用来预测未来的事情，（把现在的事情看作 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 未来要发生的事情比作 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ，马尔可夫的意思就是未来将要发生的事情只和现在有关与过去无关 ）</p>
<ul>
<li>
<p>我们提出新的概念“后验”与“先验”(先后的界限在于是否考虑当前的观测)</p>
<p>界定当前时刻为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> ，此时的机器人状态 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 可以用全部时刻的观测<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">z_{1:t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和全部时刻的控制量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">u_{1:t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 来计算</p>
<p>可以表示为 “后验”（后验的意思就是，由果寻因，观测为果，真实状态为因）</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>e</mi><mi>l</mi><mo>(</mo><msub><mi>x</mi><mi>t</mi></msub><mo>)</mo><mo>=</mo><mi>P</mi><mo>(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">bel(x_{t})=P(x_{t}|z_{1:t},u_{1:t})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>那么我们可以有</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>b</mi><mi>e</mi><mi>l</mi></mrow><mo stretchy="true">‾</mo></mover><mo>=</mo><mi>P</mi><mo>(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">\overline{bel}=P(x_{t}|z_{1:t-1},u_{1:t})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89444em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>b</mi><mi>e</mi><mi>l</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{bel}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89444em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span> 在综合<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">z_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (t 时刻的测量)前，预测（估计）了t时刻的状态</p>
<p>那么我们可以说 由 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>b</mi><mi>e</mi><mi>l</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{bel}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89444em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>e</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">bel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 是一个“更新过程”</p>
</li>
<li>
<p>推导贝叶斯滤波</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>b</mi><mi>e</mi><mi>l</mi><mo>(</mo><msub><mi>x</mi><mi>t</mi></msub><mo>)</mo><mo>=</mo><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><msub><mn>1</mn><mrow><mn>1</mn><mo separator="true">,</mo><mi>t</mi></mrow></msub></msub><mo separator="true">,</mo><msub><mi>u</mi><msub><mn>1</mn><mrow><mn>1</mn><mo separator="true">,</mo><mi>t</mi></mrow></msub></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>z</mi><mrow><mn>1</mn><mo separator="true">;</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo separator="true">;</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mn>1</mn><mo separator="true">;</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>η</mi><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>z</mi><mrow><mn>1</mn><mo separator="true">;</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
bel(x_{t})=p\left(x_{t} | z_{1_{1, t}}, u_{1_{1, t}}\right) &amp;=\frac{p\left(z_{t} | x_{t}, z_{1 ; t-1}, u_{1: t}\right) p\left(x_{t} | z_{1, t-1}, u_{1 ; t}\right)}{p\left(z_{t} | z_{1 ; t-1}, u_{1: t}\right)} \\
&amp;=\eta p\left(z_{t} | x_{t}, z_{1 ; t-1}, u_{1: t}\right) p\left(x_{t} | z_{1: t-1}, u_{1: t}\right)
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.199108em;vertical-align:-1.8495540000000004em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3495539999999995em;"><span style="top:-4.349554em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110800000000004em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428566em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110800000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428566em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-2.237446em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8495540000000004em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3495539999999995em;"><span style="top:-4.349554em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">;</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">;</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">;</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.237446em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">;</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8495540000000004em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>这里的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi><mo>=</mo><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mn>1</mn><mo separator="true">;</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\eta=p\left(z_{t} | z_{1 ; t-1}, u_{1: t}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">;</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></p>
</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>z</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>=</mo><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">p\left(z_{t} | x_{t}, z_{1: t-1}, u_{1: t}\right)=p\left(z_{t} | x_{t}\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p>t 时刻的观测，只与 t 时刻的实际状态有关。和上一时刻的观测与控制没有任何关系。固有上式。</p>
<p>所以就可以得到化简形式：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>=</mo><mi>η</mi><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">p\left(x_{t} | z_{1: t}, u_{1: t}\right)=\eta p\left(z_{t} | x_{t}\right) p\left(x_{t} | z_{1: t-1}, u_{1: t}\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p>我们通过全概率公式       <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><mo>∫</mo><mi>p</mi><mo>(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>y</mi><mo>)</mo><mi>p</mi><mo>(</mo><mi>y</mi><mo>)</mo><mi mathvariant="normal">d</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">p(x)=\int p(x | y) p(y) \mathrm{d} y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>        来处理<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>b</mi><mi>e</mi><mi>l</mi><mo>(</mo><msub><mi>x</mi><mi>t</mi></msub><mo>)</mo></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{bel(x_{t})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2000000000000002em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9500000000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.87em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span></span></span></span>：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mover accent="true"><mi mathvariant="normal">bel</mi><mo>⁡</mo><mo stretchy="true">‾</mo></mover><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mn>1</mn><mo separator="true">;</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo separator="true">;</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>∫</mo><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>z</mi><mrow><mn>1</mn><mo separator="true">;</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><msub><mn>1</mn><mn>1</mn></msub><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo separator="true">;</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>d</mi><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\overline{\operatorname{bel}}\left(x_{t}\right) &amp;=p\left(x_{i} | z_{1 ; t-1}, u_{1 ; t}\right) \\
&amp;=\int p\left(x_{t} | x_{t-1}, z_{1 ; t-1}, u_{1_{1} t}\right) p\left(x_{t-1} | z_{1: t-1}, u_{1 ; t}\right) d x_{t-1}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.076689999999999em;vertical-align:-1.7883449999999992em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.288345em;"><span style="top:-4.7539050000000005em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mord mathrm">b</span><span class="mord mathrm">e</span><span class="mord mathrm">l</span></span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.733905000000001em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7883449999999992em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.288345em;"><span style="top:-4.7539050000000005em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">;</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">;</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.733905000000001em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">;</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">;</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7883449999999992em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>然后我们对积分内前一项进行处理：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="bold-italic">x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>z</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo>:</mo><mi>t</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>=</mo><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="bold-italic">x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">u</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">p\left(\boldsymbol{x}_{t} | \boldsymbol{x}_{t-1}, z_{1: t-1}, u_{1: t}\right)=p\left(\boldsymbol{x}_{t} | \boldsymbol{x}_{t-1}, \boldsymbol{u}_{t}\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">u</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">z_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 一个真实值，一个观测，那我更相信真实值。所以上个时刻的那些观测没用。如上式所示。</p>
<p>然后我们处理后面一项，表示的意思是，根据 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 时刻的测量计算该时刻的真实值。那和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 时刻的控制没有任何关系，所以剔除。得到：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi mathvariant="normal">bel</mi><mo>⁡</mo><mo stretchy="true">‾</mo></mover><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mo>∫</mo><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mrow><msub><mn>1</mn><mi>z</mi></msub><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mn>1</mn><mo separator="true">;</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow><mi>d</mi><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\overline{\operatorname{bel}}\left(x_{t}\right)=\int p\left(x_{t} | x_{t-1}, u_{t}\right) p\left(x_{t-1} | z_{1_{z} t-1}, u_{1 ; t-1}\right) d x_{t-1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.14444em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mord mathrm">b</span><span class="mord mathrm">e</span><span class="mord mathrm">l</span></span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.22225em;vertical-align:-0.86225em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">;</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>得到贝叶斯滤波的核心：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mover accent="true"><mi mathvariant="normal">bel</mi><mo>⁡</mo><mo stretchy="true">‾</mo></mover><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mo>∫</mo><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>u</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow><mtext> bel </mtext><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow><mi>d</mi><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> bel </mtext><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mi>η</mi><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow><mover accent="true"><mi mathvariant="normal">bel</mi><mo>⁡</mo><mo stretchy="true">‾</mo></mover><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}
\overline{\operatorname{bel}}\left(x_{t}\right)=\int p\left(x_{t} | u_{t}, x_{t-1}\right) \text { bel }\left(x_{t-1}\right) d x_{t-1} \\
\text { bel }\left(x_{t}\right)=\eta p\left(z_{t} | x_{t}\right) \overline{\operatorname{bel}}\left(x_{t}\right)
\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5088800000000004em;vertical-align:-1.0044400000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.50444em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mord mathrm">b</span><span class="mord mathrm">e</span><span class="mord mathrm">l</span></span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord"> bel </span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3555599999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> bel </span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mord mathrm">b</span><span class="mord mathrm">e</span><span class="mord mathrm">l</span></span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0044400000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
<h4 id="参考文献">参考文献</h4>
<p>《Probabilistic Robotics》<br>
弗莱堡大学 Cyrill Stachniss SLAM-Course 课程：</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数学动画引擎Manim (windows 保姆级安装教程)]]></title>
        <id>https://liuxuejun123.github.io/post/shu-xue-dong-hua-yin-qing-manim-windows-bao-mu-ji-an-zhuang-jiao-cheng/</id>
        <link href="https://liuxuejun123.github.io/post/shu-xue-dong-hua-yin-qing-manim-windows-bao-mu-ji-an-zhuang-jiao-cheng/">
        </link>
        <updated>2020-05-31T09:00:46.000Z</updated>
        <content type="html"><![CDATA[<h4 id="1-下载python3738没尝试过感兴趣的大佬可以尝试下">1. 下载Python3.7(3.8没尝试过，感兴趣的大佬可以尝试下)</h4>
<pre><code class="language-http">https://www.python.org/
</code></pre>
<p><img src="https://liuxuejun123.github.io//post-images/1590915994706.PNG" alt="" loading="lazy"><br>
<img src="https://liuxuejun123.github.io//post-images/1590916106544.PNG" alt="" loading="lazy"><br>
选择 3.7.7<br>
接下的安装环节不多赘述。<br>
安装后 WIN+R 输入CMD<br>
输入Python 查看版本号，quit(); 退出。</p>
<h4 id="2安装pip">2.安装pip</h4>
<p>网址如下：</p>
<pre><code class="language-http">https://pypi.org/project/pip/
</code></pre>
<p>Navigation -&gt; Download files -&gt; pip-20.1.1.tar.gz<br>
<img src="https://liuxuejun123.github.io//post-images/1590916399879.PNG" alt="" loading="lazy"></p>
<h4 id="3下载依赖提供了某盘下载链接需要可直接下载">3.下载依赖，提供了某盘下载链接需要可直接下载：</h4>
<pre><code class="language-http">https://pan.baidu.com/s/1_nGR8KRybJAeHil53KJ6jg  {ij4j} 
</code></pre>
<p>盘内有：FFmpeg , pycairo, MikTex , SoX</p>
<h5 id="ffmpeg">FFmpeg</h5>
<p>将下载的 ffmpeg.exe , ffplay.exe , ffprobe.exe 三个程序复制到 C:\Windows\System32目录下即可。</p>
<h5 id="pycairo">Pycairo</h5>
<p>进入到 pycairo-1.19.1-cp37-cp37m-win_amd64.whl 所在目录，使用 pip 来安装：</p>
<pre><code class="language-c">pip install .\pycairo-1.19.1-cp37-cp37m-win_amd64.whl
</code></pre>
<h5 id="miktex-sox">MikTex SoX</h5>
<p>这两个就是exe  直接安装即可</p>
<h4 id="4安装python包">4.安装python包</h4>
<p>cd 到manim 路劲：<br>
pip install -r requirements.txt<br>
至此window下安装完成<br>
运行测试案例</p>
<pre><code class="language-python">python manim.py example_scenes.py SquareToCircle -pl
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[STM32 控制伺服电机]]></title>
        <id>https://liuxuejun123.github.io/post/stm32-kong-zhi-si-fu-dian-ji/</id>
        <link href="https://liuxuejun123.github.io/post/stm32-kong-zhi-si-fu-dian-ji/">
        </link>
        <updated>2020-05-09T10:15:51.000Z</updated>
        <content type="html"><![CDATA[<h4 id="problem-description">Problem Description</h4>
<p>Create a folder for the six lab. Copy all the files from the previous laboratory.<br>
In Proteus in an existing project, change MOTOR-ENCODER to MOTOR-SERVO. Connect signal from MOTOR-SERVO sensor to MC ADC input.<br>
In Keil, supplement the project for the microcontroller. Setup ADC for continuous mode and send value of MOTOR-SERVO sensor to Simulink.</p>
<h4 id="the-simulation-block-diagram-is-as-follows">The simulation block diagram is as follows</h4>
<figure data-type="image" tabindex="1"><img src="https://liuxuejun123.github.io//post-images/1589019498905.PNG" alt="" loading="lazy"></figure>
<h4 id="introduction-to-adc">Introduction to ADC</h4>
<p>The STM32F4xx series generally have 3 ADCs. These ADCs can be used independently or in dual / triple mode (increasing the sampling rate). The STM32F4 ADC is a 12-bit successive approximation type analog-to-digital converter. It has 19 channels and can measure signals from 16 external sources, 2 internal sources, and Vbat channels. The A / D conversion of these channels can be performed in single, continuous, scan or discontinuous mode. The result of ADC can be stored in 16-bit data register with left or right alignment. The analog watchdog feature allows the application to detect whether the input voltage exceeds a user-defined high / low threshold.</p>
<h4 id="adc-cr1">ADC-CR1</h4>
<p><img src="https://liuxuejun123.github.io//post-images/1589020471888.png" alt="" loading="lazy"><br>
The SCAN bit of ADC_CR1, which is used to set the scan mode, is set and cleared by software. If it is set to 1, the scan mode is used, if it is 0, the scan mode is turned off. In scan mode, the channel selected by the ADC_SQRx or ADC_JSQRx register is converted. If EOCIE or JEOCIE is set, the EOC or JEOC interrupt will be generated only after the last channel conversion is completed.</p>
<p>ADC_CR1 [25:24] is used to set the resolution of the ADC, the detailed correspondence is shown in the figure<br>
<img src="https://liuxuejun123.github.io//post-images/1589020492776.png" alt="" loading="lazy"></p>
<h4 id="adc-cr2">ADC-CR2</h4>
<p><img src="https://liuxuejun123.github.io//post-images/1589020513687.png" alt="" loading="lazy"><br>
The ADON bit is used to switch the AD converter. The CONT bit is used to set whether to perform continuous conversion, we use a single conversion, so the CONT bit must be 0. ALIGN is used to set the data alignment, we use right alignment, this bit is set to 0.</p>
<p>EXTEN [1: 0] is used to set the external trigger enable of the regular channel, the detailed setting relationship is shown in the figure<br>
<img src="https://liuxuejun123.github.io//post-images/1589020533397.png" alt="" loading="lazy"></p>
<h4 id="adc-smpr1">ADC-SMPR1</h4>
<p><img src="https://liuxuejun123.github.io//post-images/1589020550607.png" alt="" loading="lazy"><br>
Here we list the correspondence between the pins of ADC1 ~ ADC3 and the channels. The correspondence between the 16 external sources is as follows:<br>
<img src="https://liuxuejun123.github.io//post-images/1589020566976.png" alt="" loading="lazy"></p>
<h3 id="code">Code</h3>
<pre><code class="language-c">#include &quot;stm32f4xx.h&quot;
#include &quot;stm32f4xx_hal_gpio.h&quot;
#include &quot;stm32f4xx_hal_rcc.h&quot;
#include &lt;math.h&gt;
//define Internal RC frequencies
#define XTAL 16000000UL

//define busses prescalers
#define AHB_PRE 1
#define APB1_PRE 2
#define APB2_PRE 1
#define SysTickClk 10000

//calculate peripheral frequencies
#define SYSCLK 84000000
#define AHB SYSCLK/AHB_PRE
#define APB1 AHB/APB1_PRE
#define APB1_TIM APB1*2
#define APB2 AHB/APB2_PRE
#define APB2_TIM APB2*1
#define SysTicks AHB/SysTickClk

//usart
#define USART_BAUDRATE 19200
#define BUFFER_LENGTH 3
uint16_t buffer_size=0,current_send_byte;
uint8_t buffer[BUFFER_LENGTH];
//math
#define M_pi 3.1415926535897323846
uint16_t T_pwm;
int8_t motor_speed;
uint8_t S[]={100,100,101};
//adc//



//*******    Clock settings    ***********/
void clock_set()
{
FLASH-&gt;ACR|=FLASH_ACR_PRFTEN;
FLASH-&gt;ACR|=FLASH_ACR_LATENCY_2WS;//FLASH PREFETCH
RCC-&gt;CFGR&amp;=~RCC_CFGR_HPRE_Msk;
RCC-&gt;CFGR|=RCC_CFGR_HPRE_DIV1;
RCC-&gt;CFGR&amp;=~RCC_CFGR_PPRE1_Msk;
RCC-&gt;CFGR|=RCC_CFGR_PPRE1_DIV2;
RCC-&gt;CFGR&amp;=~RCC_CFGR_PPRE2_Msk;
RCC-&gt;CFGR|=RCC_CFGR_PPRE2_DIV1;//set AHB APB1 APB2
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLM_Msk;
RCC-&gt;PLLCFGR|=8&lt;&lt;RCC_PLLCFGR_PLLM_Pos;
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLN_Msk;
RCC-&gt;PLLCFGR|=84&lt;&lt;RCC_PLLCFGR_PLLN_Pos;
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLP_Msk; //SET PLLM PLLN PLLP
RCC-&gt;CR|=RCC_CR_PLLON;//OPEN PLL
while((RCC-&gt;CR&amp;RCC_CR_PLLRDY)==0)//WAIT PLL START
{}
RCC-&gt;CFGR&amp;=(uint32_t)((uint32_t)~(RCC_CFGR_SW));
RCC-&gt;CFGR|=RCC_CFGR_SW_PLL;
while((RCC-&gt;CFGR&amp;RCC_CFGR_SWS)!=RCC_CFGR_SWS_PLL)
{}
}

/****  Serial port initialization  ******/
/**** pa2 pa3 multiplexing function****/
void usart2_Init(uint32_t baud)
{
RCC-&gt;AHB1ENR |= RCC_AHB1ENR_GPIOAEN|
	              RCC_AHB1ENR_GPIOBEN;//open clock
GPIOA-&gt;MODER =0x000000A0;//Multiple function mode 	
GPIOA-&gt;AFR[0]=0x00007700;//
RCC-&gt;APB1ENR |= RCC_APB1ENR_USART2EN;//usart2 enable
USART2-&gt;BRR = APB1/baud;//Baud rate
USART2-&gt;CR1 = USART_CR1_UE|//usart2 enbale
	            USART_CR1_TE|//
	            USART_CR1_RE|//Send and receive enable
	            USART_CR1_RXNEIE;//Interrupt enable
NVIC_EnableIRQ(USART2_IRQn);//Configuration interrupt		
}

/**** delay function ****/
void delay_ms(uint16_t time)     
{    
  uint16_t i=0;    
  while(time--)     
  {    
    i=12000;    
    while(i--);    
  }    
}
/********* Motor control detection section *************/
//TIM4_Encoder_Init,Tim4_CH1(PB6);Tim4_CH2(PB7)

//void TIM4_Encoder_Init(uint16_t arr,uint16_t psc)
//{

// RCC-&gt;APB1ENR |= (4&lt;&lt;0);  //TIM4 clock enabled
// GPIOB-&gt;MODER |= 1 &lt;&lt; (6*2 + 1) | 1 &lt;&lt; (7*2 + 1); ; // Reuse output mode
// GPIOB-&gt;AFR[0] |= (uint32_t)0x22000000; // Reuse as TIM4	
// TIM4-&gt;ARR=arr;            
// TIM4-&gt;PSC=psc;  
//	
// TIM4-&gt;CCMR1 &amp;= 0xFCFC;//clear 0
// TIM4-&gt;CCMR1 |= TIM_CCMR1_CC1S_0;//Capture/Compare 1 Selection
// TIM4-&gt;CCMR1 |= TIM_CCMR1_CC2S_0;

// TIM4-&gt;CCMR1 |= TIM_CCMR1_OC1M_0;//Output Compare 1 Mode
// TIM4-&gt;CCMR1 |= TIM_CCMR1_OC1M_1;
//	
// TIM4-&gt;CCER |= TIM_CCER_CC1E; // Enable comparison output
// TIM4-&gt;CCER |= TIM_CCER_CC2E;
// 
// TIM4-&gt;EGR |= TIM_EGR_UG;  //Update

// TIM4-&gt;SMCR &amp;= 0xFFF8;
// TIM4-&gt;SMCR |= TIM_SMCR_SMS_0;
// TIM4-&gt;SMCR |= TIM_SMCR_SMS_1;
// 
// TIM4-&gt;CNT = 0;
// TIM4-&gt;CR1 |= TIM_CR1_CEN;  // Counter enable            
//}


/********   TIM3 Two PWM output control speed *************/
void init_TIM3_PWM(uint16_t psc,uint16_t arr)//control pin 67 //psc arr fre set，ch1 ch2 Duty cycle
{
  SCB-&gt;AIRCR = 0x05FA0000 | 0x400;  //Interrupt priority group preemption: response = 3: 1
  GPIOA-&gt;MODER |= 0X0001A400;//pc67 second function 5 8 out
        
  GPIOA-&gt;OSPEEDR |= 0x0000f000;//speed 100m
  GPIOA-&gt;PUPDR |= 0x00005000;//up   
  GPIOA-&gt;AFR[0] |= 0x22000000;//pc67 second function AF2
  RCC-&gt;APB1ENR |= (1&lt;&lt;1); //open TIM3 clock
  TIM3-&gt;PSC = psc; //
  TIM3-&gt;ARR = arr;  //
  TIM3-&gt;EGR |= 1; //Generate an update event
  TIM3-&gt;CCMR1 |= 0x6060;//PWM mode 1
  TIM3-&gt;CCER |= 0x1111;//Enable comparison output
  TIM3-&gt;CCMR1 |= 0x0808;//Start preload
  TIM3-&gt;CR1 |= 1; //start
}

/********* Motor speed and reverse control function********/
void Motor_Speed_Control(int8_t motorSpeed)         
{
    int16_t speed = 0 ;        
        
       if(motorSpeed&gt;100)  speed = 100;
	else if (motorSpeed&lt;-100)  speed = -100;
     else  speed = motorSpeed;
        if(speed == 0)
        {
        GPIOA-&gt;ODR |=GPIO_ODR_OD5;//pa5 high level
				GPIOA-&gt;ODR |=GPIO_ODR_OD8;//Pa8 high level 
				TIM3-&gt;CCR1 = speed *0;//ch1 no output  
				TIM3-&gt;CCR2 = speed *0;//ch2 no output	
        }
            else if(speed &gt; 0)//Forward rotation, 
                {
									GPIOA-&gt;ODR |=GPIO_ODR_OD5;
									GPIOA-&gt;ODR &amp;=~(GPIO_ODR_OD8);//
									TIM3-&gt;CCR1 = speed *T_pwm;//ch1  pwm 
									TIM3-&gt;CCR2 = speed *0;//ch2 
                }
						else
								{
									GPIOA-&gt;ODR |=GPIO_ODR_OD8;//backgroud
									GPIOA-&gt;ODR &amp;=~(GPIO_ODR_OD5);
									TIM3-&gt;CCR1 = -speed * 0;//ch1
									TIM3-&gt;CCR2 = -speed * T_pwm;//ch2
								}
}

//Read count
//int TIM4_Encoder_Read(void)
//{

//    return  (int)TIM4 -&gt;CNT;;           //Data type conversion
//                             // Record the number of edge changes (a grid is recorded 4 times)
//}




/****** Serial interrupt function******/
void USART2_IRQHandler(void)
{
	
	//Send part	
	if (USART2-&gt;SR &amp; USART_SR_TXE)//Txe register is empty Send data
{
if(buffer_size &gt; current_send_byte)
{
USART2-&gt;DR = buffer[current_send_byte];
current_send_byte++;
}
else
{
USART2-&gt;CR2 &amp;= ~USART_CR1_TXEIE;
current_send_byte = 0;
buffer_size = 0;
}
}

if(USART2-&gt;SR &amp; USART_SR_RXNE)//Receive interrupt indicator Trigger receive
{
//Receiving part//
Motor_Speed_Control(USART2-&gt;DR);
}
}


/***** Serial port sending function******/
void Send_buffer(uint8_t *buff, uint16_t count)
{
for(uint16_t i = 0; i &lt; count; i++)
{
buffer[buffer_size + i] = buff[i];
}
buffer_size += count;
USART2-&gt;CR1 |= USART_CR1_TXEIE;
}

/******Speed real-time transmission function*********/
void Init_tim10(uint16_t arr,uint16_t psc)
{
//OPEN TIM10
RCC-&gt;APB2ENR |=1&lt;&lt;17;
TIM10-&gt;CNT=0;//CLEAR
TIM10-&gt;PSC = psc;
TIM10-&gt;ARR = arr;
/*Allow update interrupt enable*/
TIM10-&gt;DIER |= 1&lt;&lt;0;
/*Enable basic timer interrupt*/
NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
/*Turn on counter enable*/
TIM10-&gt;CR1 |= 1&lt;&lt;0;
}
void TIM1_UP_TIM10_IRQHandler(void)
{
TIM10-&gt;SR &amp;=~TIM_SR_UIF;
static uint8_t i=0;
if(++i==100) i=0;

buffer[0]='A';
buffer[1]=i;
buffer[2]=(int8_t)ADC1-&gt;DR;;
USART2-&gt;CR1 |= USART_CR1_TXEIE;
Send_buffer(buffer,3);

}
void ADC1_IN10_Config(void)
{
	RCC-&gt;AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
	GPIOC-&gt;MODER |= 0x3 &lt;&lt; 0;		//	Analog mode
	GPIOC-&gt;PUPDR &amp;= ~GPIO_PUPDR_PUPD0;	//	No pull-up, pull-down 

	/***ADC1***/
	RCC-&gt;APB2ENR |= RCC_APB2ENR_ADC1EN;
	// Because there is only one replacement, find SQ1 first.
	// Then correspond to the corresponding channel number.
	ADC1-&gt;SQR3 = 10 &lt;&lt; ADC_SQR3_SQ1_Pos;			//	The first channel is ADC1_in10
	ADC1-&gt;CR1 &amp;= 0x00000000;
	ADC1-&gt;CR1 |= ADC_CR1_RES_1;			// Set to 8-bit resolution
	ADC1-&gt;CR2 &amp;= 0x00000000;  
	ADC1-&gt;CR2 |= ADC_CR2_CONT;			/*!&lt;Continuous Conversion */
	ADC1-&gt;CR2 |= ADC_CR2_ADON;			/*!&lt;A/D Converter ON*/
	ADC1-&gt;CR2 |= ADC_CR2_SWSTART;		/*!&lt;Start Conversion of regular channels */
}

int main()
{

T_pwm=10000/100;
clock_set();
usart2_Init(USART_BAUDRATE);
init_TIM3_PWM(84-1,10000);//10khz	
//TIM4_Encoder_Init(255,0);//255
Init_tim10(10000,84-1);
ADC1_IN10_Config();

while(1)
{
}	
}

</code></pre>
<h3 id="simulation-results">Simulation results</h3>
<p><img src="https://liuxuejun123.github.io//post-images/1589020684510.PNG" alt="" loading="lazy"><br>
<img src="https://liuxuejun123.github.io//post-images/1589020690747.PNG" alt="" loading="lazy"><br>
<img src="https://liuxuejun123.github.io//post-images/1589020696109.PNG" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[STM32 H桥驱动电机，串口控制接收，Matlab+Proteus 联合调试]]></title>
        <id>https://liuxuejun123.github.io/post/stm32-h-qiao-qu-dong-dian-ji-chuan-kou-kong-zhi-jie-shou-matlabproteus-lian-he-diao-shi/</id>
        <link href="https://liuxuejun123.github.io/post/stm32-h-qiao-qu-dong-dian-ji-chuan-kou-kong-zhi-jie-shou-matlabproteus-lian-he-diao-shi/">
        </link>
        <updated>2020-04-29T15:23:49.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://liuxuejun123.github.io//post-images/1588173952599.PNG" alt="" loading="lazy"></figure>
<h2 id="problem-description">Problem Description</h2>
<ol>
<li>Create motor control system<br>
a. Setup first timer. It must have 2 output PWM lines for control motor speed of motion.<br>
b. In Simulink add Serial send block. For set speed of motion (PWM period %) use slider gain (with values from -100 to 100).<br>
c. On reading byte from Simulink set control signals for motor.</li>
<li>Setup second timer. It must have 2 input line from encoder.</li>
<li>Counted pulses from encoder send to Simulink.<br>
For receive data from microcontroller use Simulink model, and show received data in scope.</li>
</ol>
<h2 id="task-analysis">Task analysis</h2>
<p>After analyzing the entire task, the main solution：</p>
<p>Enable TIM3 PWM output mode Configure channel 1 (PA6), channel 2 (PA7), and control the high and low levels of PA5 and PA6. Matlab sends a number of -100-100 to indicate the direction and speed of the motor. After the serial port receives the data, it controls the motor after the data is processed, and then processes the encoded signal output by the motor through the TIM4 encoding function to obtain the speed of the motor, and Resend to Matlab via serial communication</p>
<h2 id="tim-pwm-mode-and-configuration-method">Tim PWM mode and configuration method</h2>
<p><img src="https://liuxuejun123.github.io//post-images/1588173937637.png" alt="" loading="lazy"><br>
The general-purpose timer can use the GPIO pin for pulse output. When it is configured as a comparison output or a PWM output function, the capture / compare register TIMx_CCR is used as a comparison function, which is referred to as a comparison register below.<br>
Here is a direct example to illustrate the working process of the PWM output of the timer: if the pulse counter TIMx_CNT is configured to count up, and the reload register TIMx_ARR is configured to N, that is, the current count value X of the TIMx_CNT is continuously accumulated under the drive of the TIMxCLK clock source When the value X of TIMx_CNT is greater than N, the value of TIMx_CNT will be reset to 0 and counted again.<br>
While counting TIMxCNT, the count value X of TIMxCNT will be compared with the value A pre-stored in the comparison register TIMx_CCR. When the value X of the pulse counter TIMx_CNT is less than the value A of the comparison register TIMx_CCR, the high level (or low Level), conversely, when the value X of the pulse counter is greater than or equal to the value A of the comparison register, a low level (or high level) is output.<br>
In this way, the output pulse period is the value (N + 1) stored in the reload register TIMx_ARR multiplied by the clock period of the trigger pulse, and the pulse width is the value A of the comparison register TIMx_CCR multiplied by the clock period of the trigger pulse, that is The duty cycle of the output PWM is A / (N + 1).</p>
<h2 id="encoder-interface-mode">Encoder interface mode</h2>
<p><img src="https://liuxuejun123.github.io//post-images/1588173997249.PNG" alt="" loading="lazy"><br>
When both AB are the same, a square wave is output, and the phase difference is 90 °. We can judge the forward and reverse by judging the order of the level transition of the two phases of AB, and we can also determine the number of level transitions of any one phase. Rotation speed</p>
<h2 id="timx-capturecompare-mode-register-1-timx_ccmr1">TIMx capture/compare mode register 1 (TIMx_CCMR1)</h2>
<figure data-type="image" tabindex="2"><img src="https://liuxuejun123.github.io//post-images/1588174028343.PNG" alt="" loading="lazy"></figure>
<h4 id="bits-98-cc2s10-capturecompare-2-selection">Bits 9:8 CC2S[1:0]: Capture/Compare 2 selection</h4>
<p>This bit-field defines the direction of the channel (input/output) as well as the used input.<br>
00: CC2 channel is configured as output<br>
01: CC2 channel is configured as input, IC2 is mapped on TI2<br>
10: CC2 channel is configured as input, IC2 is mapped on TI1<br>
11: CC2 channel is configured as input, IC2 is mapped on TRC. This mode is working only if<br>
an internal trigger input is selected through the TS bit (TIMx_SMCR register)<br>
Note: CC2S bits are writable only when the channel is OFF (CC2E = 0 in TIMx_CCER).</p>
<h4 id="bits-10-cc1s-capturecompare-1-selection">Bits 1:0 CC1S: Capture/Compare 1 selection</h4>
<p>This bit-field defines the direction of the channel (input/output) as well as the used input.<br>
00: CC1 channel is configured as output.<br>
01: CC1 channel is configured as input, IC1 is mapped on TI1.<br>
10: CC1 channel is configured as input, IC1 is mapped on TI2.<br>
11: CC1 channel is configured as input, IC1 is mapped on TRC. This mode is working only if<br>
an internal trigger input is selected through TS bit (TIMx_SMCR register)<br>
Note: CC1S bits are writable only when the channel is OFF (CC1E = 0 in TIMx_CCER).</p>
<h2 id="timx-capturecompare-enable-register-timx_ccer">TIMx capture/compare enable register (TIMx_CCER)</h2>
<figure data-type="image" tabindex="3"><img src="https://liuxuejun123.github.io//post-images/1588174071967.PNG" alt="" loading="lazy"></figure>
<h4 id="bit-4-cc2e-capturecompare-2-output-enable">Bit 4 CC2E: Capture/Compare 2 output enable.</h4>
<p>refer to CC1E description</p>
<h4 id="bit-0-cc1e-capturecompare-1-output-enable">Bit 0 CC1E: Capture/Compare 1 output enable.</h4>
<p>CC1 channel configured as output:<br>
0: Off - OC1 is not active<br>
1: On - OC1 signal is output on the corresponding output pin<br>
CC1 channel configured as input:<br>
This bit determines if a capture of the counter value can actually be done into the input<br>
capture/compare register 1 (TIMx_CCR1) or not.<br>
0: Capture disabled<br>
1: Capture enabled</p>
<h2 id="code">Code</h2>
<pre><code class="language-c">#include &quot;stm32f4xx.h&quot;
#include &quot;stm32f4xx_hal_gpio.h&quot;
#include &quot;stm32f4xx_hal_rcc.h&quot;
#include &lt;math.h&gt;
//define Internal RC frequencies
#define XTAL 16000000UL

//define busses prescalers
#define AHB_PRE 1
#define APB1_PRE 2
#define APB2_PRE 1
#define SysTickClk 10000

//calculate peripheral frequencies
#define SYSCLK 84000000
#define AHB SYSCLK/AHB_PRE
#define APB1 AHB/APB1_PRE
#define APB1_TIM APB1*2
#define APB2 AHB/APB2_PRE
#define APB2_TIM APB2*1
#define SysTicks AHB/SysTickClk

//usart
#define USART_BAUDRATE 19200
#define BUFFER_LENGTH 100
uint16_t buffer_size=0,current_send_byte;
uint8_t buffer[BUFFER_LENGTH];
//math
#define M_pi 3.1415926535897323846
uint16_t T_pwm;
int8_t motor_speed;
uint8_t S[]={100,100,101};

/*******    Clock settings    ***********/
void clock_set()
{
FLASH-&gt;ACR|=FLASH_ACR_PRFTEN;
FLASH-&gt;ACR|=FLASH_ACR_LATENCY_2WS;//FLASH PREFETCH
RCC-&gt;CFGR&amp;=~RCC_CFGR_HPRE_Msk;
RCC-&gt;CFGR|=RCC_CFGR_HPRE_DIV1;
RCC-&gt;CFGR&amp;=~RCC_CFGR_PPRE1_Msk;
RCC-&gt;CFGR|=RCC_CFGR_PPRE1_DIV2;
RCC-&gt;CFGR&amp;=~RCC_CFGR_PPRE2_Msk;
RCC-&gt;CFGR|=RCC_CFGR_PPRE2_DIV1;//set AHB APB1 APB2
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLM_Msk;
RCC-&gt;PLLCFGR|=8&lt;&lt;RCC_PLLCFGR_PLLM_Pos;
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLN_Msk;
RCC-&gt;PLLCFGR|=84&lt;&lt;RCC_PLLCFGR_PLLN_Pos;
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLP_Msk; //SET PLLM PLLN PLLP
RCC-&gt;CR|=RCC_CR_PLLON;//OPEN PLL
while((RCC-&gt;CR&amp;RCC_CR_PLLRDY)==0)//WAIT PLL START
{}
RCC-&gt;CFGR&amp;=(uint32_t)((uint32_t)~(RCC_CFGR_SW));
RCC-&gt;CFGR|=RCC_CFGR_SW_PLL;
while((RCC-&gt;CFGR&amp;RCC_CFGR_SWS)!=RCC_CFGR_SWS_PLL)
{}
}

/****  Serial port initialization  ******/
/**** pa2 pa3 multiplexing function****/
void usart2_Init(uint32_t baud)
{
RCC-&gt;AHB1ENR |= RCC_AHB1ENR_GPIOAEN|
	              RCC_AHB1ENR_GPIOBEN;//open clock
GPIOA-&gt;MODER =0x000000A0;//Multiple function mode 	
GPIOA-&gt;AFR[0]=0x00007700;//
RCC-&gt;APB1ENR |= RCC_APB1ENR_USART2EN;//usart2 enable
USART2-&gt;BRR = APB1/baud;//Baud rate
USART2-&gt;CR1 = USART_CR1_UE|//usart2 enbale
	            USART_CR1_TE|//
	            USART_CR1_RE|//Send and receive enable
	            USART_CR1_RXNEIE;//Interrupt enable
NVIC_EnableIRQ(USART2_IRQn);//Configuration interrupt		
}

/**** delay function ****/
void delay_ms(uint16_t time)     
{    
  uint16_t i=0;    
  while(time--)     
  {    
    i=12000;    
    while(i--);    
  }    
}
/********* Motor control detection section *************/
//TIM4_Encoder_Init,Tim4_CH1(PB6);Tim4_CH2(PB7)

void TIM4_Encoder_Init(uint16_t arr,uint16_t psc)
{

 RCC-&gt;APB1ENR |= (4&lt;&lt;0);  //TIM4 clock enabled
 GPIOB-&gt;MODER |= 1 &lt;&lt; (6*2 + 1) | 1 &lt;&lt; (7*2 + 1); ; // Reuse output mode
 GPIOB-&gt;AFR[0] |= (uint32_t)0x22000000; // Reuse as TIM4	
 TIM4-&gt;ARR=arr;            
 TIM4-&gt;PSC=psc;  
	
 TIM4-&gt;CCMR1 &amp;= 0xFCFC;//clear 0
 TIM4-&gt;CCMR1 |= TIM_CCMR1_CC1S_0;//Capture/Compare 1 Selection
 TIM4-&gt;CCMR1 |= TIM_CCMR1_CC2S_0;

 TIM4-&gt;CCMR1 |= TIM_CCMR1_OC1M_0;//Output Compare 1 Mode
 TIM4-&gt;CCMR1 |= TIM_CCMR1_OC1M_1;
	
 TIM4-&gt;CCER |= TIM_CCER_CC1E; // Enable comparison output
 TIM4-&gt;CCER |= TIM_CCER_CC2E;
 
 TIM4-&gt;EGR |= TIM_EGR_UG;  //Update

 TIM4-&gt;SMCR &amp;= 0xFFF8;
 TIM4-&gt;SMCR |= TIM_SMCR_SMS_0;
 TIM4-&gt;SMCR |= TIM_SMCR_SMS_1;
 
 TIM4-&gt;CNT = 0;
 TIM4-&gt;CR1 |= TIM_CR1_CEN;  // Counter enable            
}


/********   TIM3 Two PWM output control speed *************/
void init_TIM3_PWM(uint16_t psc,uint16_t arr)//control pin 67 //psc arr fre set，ch1 ch2 Duty cycle
{
  SCB-&gt;AIRCR = 0x05FA0000 | 0x400;  //Interrupt priority group preemption: response = 3: 1
  GPIOA-&gt;MODER |= 0X0001A400;//pc67 second function 5 8 out
        
  GPIOA-&gt;OSPEEDR |= 0x0000f000;//speed 100m
  GPIOA-&gt;PUPDR |= 0x00005000;//up   
  GPIOA-&gt;AFR[0] |= 0x22000000;//pc67 second function AF2
  RCC-&gt;APB1ENR |= (1&lt;&lt;1); //open TIM3 clock
  TIM3-&gt;PSC = psc; //
  TIM3-&gt;ARR = arr;  //
  TIM3-&gt;EGR |= 1; //Generate an update event
  TIM3-&gt;CCMR1 |= 0x6060;//PWM mode 1
  TIM3-&gt;CCER |= 0x1111;//Enable comparison output
  TIM3-&gt;CCMR1 |= 0x0808;//Start preload
  TIM3-&gt;CR1 |= 1; //start
}

/********* Motor speed and reverse control function********/
void Motor_Speed_Control(int8_t motorSpeed)         
{
    int16_t speed = 0 ;        
        
       if(motorSpeed&gt;100)  speed = 100;
	else if (motorSpeed&lt;-100)  speed = -100;
     else  speed = motorSpeed;
        if(speed == 0)
        {
        GPIOA-&gt;ODR |=GPIO_ODR_OD5;//pa5 high level
				GPIOA-&gt;ODR |=GPIO_ODR_OD8;//Pa8 high level 
				TIM3-&gt;CCR1 = speed *0;//ch1 no output  
				TIM3-&gt;CCR2 = speed *0;//ch2 no output	
        }
            else if(speed &gt; 0)//Forward rotation, 
                {
									GPIOA-&gt;ODR |=GPIO_ODR_OD5;
									GPIOA-&gt;ODR &amp;=~(GPIO_ODR_OD8);//
									TIM3-&gt;CCR1 = speed *T_pwm;//ch1  pwm 
									TIM3-&gt;CCR2 = speed *0;//ch2 
                }
						else
								{
									GPIOA-&gt;ODR |=GPIO_ODR_OD8;//backgroud
									GPIOA-&gt;ODR &amp;=~(GPIO_ODR_OD5);
									TIM3-&gt;CCR1 = -speed * 0;//ch1
									TIM3-&gt;CCR2 = -speed * T_pwm;//ch2
								}
}

//Read count
int TIM4_Encoder_Read(void)
{

    return  (int)TIM4 -&gt;CNT;;           //Data type conversion
                             // Record the number of edge changes (a grid is recorded 4 times)
}




/****** Serial interrupt function******/
void USART2_IRQHandler(void)
{
	
	//Send part	
	if (USART2-&gt;SR &amp; USART_SR_TXE)//Txe register is empty Send data
{
if(buffer_size &gt; current_send_byte)
{
USART2-&gt;DR = buffer[current_send_byte];
current_send_byte++;
}
else
{
USART2-&gt;CR2 &amp;= ~USART_CR1_TXEIE;
current_send_byte = 0;
buffer_size = 0;
}
}

if(USART2-&gt;SR &amp; USART_SR_RXNE)//Receive interrupt indicator Trigger receive
{
//Receiving part//
Motor_Speed_Control(USART2-&gt;DR);
}
}


/***** Serial port sending function******/
void Send_buffer(uint8_t *buff, uint16_t count)
{
for(uint16_t i = 0; i &lt; count; i++)
{
buffer[buffer_size + i] = buff[i];
}
buffer_size += count;
USART2-&gt;CR1 |= USART_CR1_TXEIE;
}

/******Speed real-time transmission function*********/
void Init_tim10(uint16_t arr,uint16_t psc)
{
//OPEN TIM10
RCC-&gt;APB2ENR |=1&lt;&lt;17;
TIM10-&gt;CNT=0;//CLEAR
TIM10-&gt;PSC = psc;
TIM10-&gt;ARR = arr;
/*Allow update interrupt enable*/
TIM10-&gt;DIER |= 1&lt;&lt;0;
/*Enable basic timer interrupt*/
NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
/*Turn on counter enable*/
TIM10-&gt;CR1 |= 1&lt;&lt;0;
}
void TIM1_UP_TIM10_IRQHandler(void)
{
TIM10-&gt;SR &amp;=~TIM_SR_UIF;
static uint8_t i=0;
if(++i==100) i=0;
int8_t s= TIM4_Encoder_Read();
buffer[0]='A';
buffer[1]=i;
buffer[2]=s;
if(1)
{
Send_buffer(buffer,3);
}
}

int main()
{

T_pwm=1000/100;
clock_set();
usart2_Init(USART_BAUDRATE);
init_TIM3_PWM(84-1,1000);//1khz	
TIM4_Encoder_Init(255,0);//255
Init_tim10(10000,84-1);
while(1)
{
}	
}

</code></pre>
<h3 id="simulation">Simulation</h3>
<p>Matlab block diagram is as follows<br>
<img src="https://liuxuejun123.github.io//post-images/1588174118895.PNG" alt="" loading="lazy"><br>
Proteus block diagram is as follows:<br>
<img src="https://liuxuejun123.github.io//post-images/1588174155802.png" alt="" loading="lazy"><br>
The upper virtual terminal displays the output data, and the lower virtual terminal actually inputs<br>
<img src="https://liuxuejun123.github.io//post-images/1588174192302.png" alt="" loading="lazy"><br>
<img src="https://liuxuejun123.github.io//post-images/1588174202296.png" alt="" loading="lazy"><br>
<img src="https://liuxuejun123.github.io//post-images/1588174210262.png" alt="" loading="lazy"><br>
<img src="https://liuxuejun123.github.io//post-images/1588174223917.PNG" alt="" loading="lazy"></p>
<h2 id="conclusion">Conclusion</h2>
<p>Through this experiment, I mainly learned to use the stm32 output PWM to control the motor, use the data received by the serial port to modify the PWM duty cycle, thereby changing the speed of the motor, and use the encoder function of stm32 to carry out the speed of the motor. Detect and send through the serial port.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[STM 32 定时器的使用]]></title>
        <id>https://liuxuejun123.github.io/post/stm-32-ding-shi-qi-de-shi-yong/</id>
        <link href="https://liuxuejun123.github.io/post/stm-32-ding-shi-qi-de-shi-yong/">
        </link>
        <updated>2020-04-29T15:10:10.000Z</updated>
        <content type="html"><![CDATA[<p>In Proteus in an existing project, remove virtual terminal, add COMPIM (COM port Physical interface model) and connect it to the microcontroller. In COMPIM set correct real physical port and baudrates.<br>
Devices in project:<br>
• Microcontroller;<br>
• 2 LEDs;<br>
• Button;<br>
• COMPIM.<br>
In Keil, supplement the project for the microcontroller. Setup 2 timers with interrupt on update, one for reading states of button, second for periodic send data to other device (program in out case).<br>
Parts of task:</p>
<ol>
<li>Setup first timer with interrupt on update. In interrupt read state of button and change LEDs state depend on button.</li>
<li>Setup second timer with interrupt on update. It must be 100 interrupts is 1 second. In the interrupt handler increase some variables and call USART send function for send array (one item of the array must be increased variable).<br>
For receive data from microcontroller use Simulink model, and show received data in scope.</li>
</ol>
<p>This experiment is mainly to learn the timer configuration using stm32.</p>
<h2 id="1introduction-to-tim">1.Introduction to TIM</h2>
<p>Among them the basic timer includes TIM6, TIM7, its structure is the simplest, also has the most basic timing function, one is for basic timing, generating time base, and the other is for driving DAC digital-to-analog converter. Among them, there are 10 general-purpose timers including TIME2-TIME5 and TIME9-TIME14. In addition to the functions of the basic timer, the general-purpose timer also has input capture, output comparison, and PWM functions. he advanced timers include TIM1, TIM8; The related common register functions of the timer are as follows:</p>
<h3 id="11-clock-source-selection-register-timx_smcr">1.1 Clock source selection register (TIMx_SMCR)</h3>
<p>There are 4 clock sources for the timer:<br>
-Internal clock (CK_INT)<br>
-External clock mode 1: External input pin (TIx)<br>
-External clock mode 2: External trigger input (ETR), only applicable to TIM2, TIM3, TIM4<br>
-Internal trigger input (ITRx): Make A timer to be prescaler of B timer (A provides clock for B)<br>
This is selected by setting the relevant bit of TIMx_SMCR. The internal clock (CK_INT) comes from the APB1 or APB2 bus</p>
<h3 id="12-prescaler-register-timx_psc">1.2 Prescaler register (TIMx_PSC)</h3>
<p>This register is used to divide the clock and then provide it to the counter as the clock of the counter.</p>
<figure data-type="image" tabindex="1"><img src="https://liuxuejun123.github.io//post-images/1588173281702.PNG" alt="" loading="lazy"></figure>
<p>The 16-bit space stores the frequency division coefficient.</p>
<h3 id="13-timer-count-register-timx_cnt">1.3 Timer count register (TIMx_CNT)</h3>
<p>It stores the current count value of the timer.</p>
<h3 id="14-automatic-reload-register-timx_arr">1.4 Automatic reload register (TIMx_ARR)</h3>
<figure data-type="image" tabindex="2"><img src="https://liuxuejun123.github.io//post-images/1588173385400.PNG" alt="" loading="lazy"></figure>
<p>This register corresponds to two registers in the physical structure, one can be operated by the programmer, and the other is invisible and inoperable ARM called it as the shadow register. The shadow registers are actually in effect.<br>
According to the setting of the APRE bit in the TIMx_CR1 register: when APRE = 0, the contents of the preload register can be transferred to the shadow register at any time, and the two are connected at this time; and when APRE = 1, at each update event (UEV) Before the contents of the preload register (ARR) are transferred to the shadow register.</p>
<h3 id="15-dma-interrupt-enable-register-timx_dier">1.5 DMA / Interrupt Enable Register (TIMx_DIER)</h3>
<figure data-type="image" tabindex="3"><img src="https://liuxuejun123.github.io//post-images/1588173450494.PNG" alt="" loading="lazy"></figure>
<p>Here we only use the last bit: update interrupt enable (UIE: update interrupt enable), set to 1 instead to allow interrupts caused by update events</p>
<h3 id="16-control-register-1-timx_cr1">1.6 Control Register 1 (TIMx_CR1)</h3>
<figure data-type="image" tabindex="4"><img src="https://liuxuejun123.github.io//post-images/1588173463731.PNG" alt="" loading="lazy"></figure>
<p>We only need to use the last bit: the counter enable bit (CEN: counter enable), instead it must be set to 1 to enable the counter to start counting.</p>
<h3 id="17-status-register-timx_sr">1.7 Status register (TIMx_SR)</h3>
<p><img src="https://liuxuejun123.github.io//post-images/1588173472820.PNG" alt="" loading="lazy">![]</p>
<p>This register is used to mark whether various events / interrupts related to the current timer have occurred</p>
<h2 id="code">Code</h2>
<pre><code class="language-c">#include &quot;stm32f4xx.h&quot;
#include &quot;stm32f4xx_hal_gpio.h&quot;
#include &quot;stm32f4xx_hal_rcc.h&quot;
#include &lt;math.h&gt;
//define Internal RC frequencies
#define XTAL 16000000UL

//define busses prescalers
#define AHB_PRE 1
#define APB1_PRE 2
#define APB2_PRE 1
#define SysTickClk 10000

//calculate peripheral frequencies
#define SYSCLK 84000000
#define AHB SYSCLK/AHB_PRE
#define APB1 AHB/APB1_PRE
#define APB1_TIM APB1*2
#define APB2 AHB/APB2_PRE
#define APB2_TIM APB2*1
#define SysTicks AHB/SysTickClk

//usart
#define USART_BAUDRATE 19200
#define BUFFER_LENGTH 3
uint16_t buffer_size=0,current_send_byte;
uint8_t buffer[BUFFER_LENGTH];
//math
#define M_pi 3.1415926535897323846

void clock_set()
{
FLASH-&gt;ACR|=FLASH_ACR_PRFTEN;
FLASH-&gt;ACR|=FLASH_ACR_LATENCY_2WS;//FLASH PREFETCH
RCC-&gt;CFGR&amp;=~RCC_CFGR_HPRE_Msk;
RCC-&gt;CFGR|=RCC_CFGR_HPRE_DIV1;
RCC-&gt;CFGR&amp;=~RCC_CFGR_PPRE1_Msk;
RCC-&gt;CFGR|=RCC_CFGR_PPRE1_DIV2;
RCC-&gt;CFGR&amp;=~RCC_CFGR_PPRE2_Msk;
RCC-&gt;CFGR|=RCC_CFGR_PPRE2_DIV1;//set AHB APB1 APB2
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLM_Msk;
RCC-&gt;PLLCFGR|=8&lt;&lt;RCC_PLLCFGR_PLLM_Pos;
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLN_Msk;
RCC-&gt;PLLCFGR|=84&lt;&lt;RCC_PLLCFGR_PLLN_Pos;
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLP_Msk; //SET PLLM PLLN PLLP
RCC-&gt;CR|=RCC_CR_PLLON;//OPEN PLL
while((RCC-&gt;CR&amp;RCC_CR_PLLRDY)==0)//WAIT PLL START
{}
RCC-&gt;CFGR&amp;=(uint32_t)((uint32_t)~(RCC_CFGR_SW));
RCC-&gt;CFGR|=RCC_CFGR_SW_PLL;
while((RCC-&gt;CFGR&amp;RCC_CFGR_SWS)!=RCC_CFGR_SWS_PLL)
{}
}

void usart2_Init(uint32_t baud)
{
RCC-&gt;AHB1ENR |= RCC_AHB1ENR_GPIOAEN|
	              RCC_AHB1ENR_GPIOBEN;//open clock
GPIOA-&gt;MODER =0x000000A0;//pa2 pa3 	Multiple function mode
GPIOA-&gt;AFR[0]=0x00007700;//
GPIOB-&gt;MODER=0x00005555;//GPIOB
RCC-&gt;APB1ENR |= RCC_APB1ENR_USART2EN;//usart2 enable
USART2-&gt;BRR = APB1/baud;//Baudrate
USART2-&gt;CR1 = USART_CR1_UE|//usart2enable
	            USART_CR1_TE|//
	            USART_CR1_RE|//transmit receive enable
	            USART_CR1_RXNEIE;//Interrupt enable
NVIC_EnableIRQ(USART2_IRQn);//Configuration interrupt	
}

void SendByte(uint8_t dat)
{
	USART2-&gt;DR = dat;
	while((USART2-&gt;SR &amp; USART_SR_TC) == 0);
}

void Send_buffer(uint8_t *buff,uint16_t count)
{
for (int i=0;i&lt;count;i++)
	{
		SendByte(*buff);
		*buff++;
	}
}

void delay_ms(uint16_t time)     
{    
  uint16_t i=0;    
  while(time--)     
  {    
    i=12000;    
    while(i--);    
  }    
}
void USART2_IRQHandler(void)
{
	if(USART2-&gt;SR &amp; USART_SR_RXNE)
	{
		buffer[buffer_size] = USART2-&gt;DR;
		buffer_size++;
		if(buffer[buffer_size-1] == 'k')
		{
			GPIOB-&gt;ODR &amp;= ~(1 &lt;&lt;0); //LEN0 OFF
			buffer_size = 0;
			USART2-&gt;CR1 &amp;= ~USART_CR1_RE;
		}
		else if(USART2-&gt;DR == 'l')
		{
			GPIOB-&gt;ODR |= 1 &lt;&lt; 0; // LED0 ON
			buffer_size = 0;
			USART2-&gt;CR1 &amp;= ~USART_CR1_RE;
		}
	}
}
void TIM1_BRK_TIM9_IRQHandler(void)
{
TIM9-&gt;SR &amp;=~TIM_SR_UIF;
	if(!(GPIOB-&gt;IDR &amp; GPIO_IDR_ID9))
	{
	GPIOB-&gt;BSRR |= GPIO_BSRR_BS1;
	GPIOB-&gt;BSRR |= GPIO_BSRR_BR0;
	}
	else
	{
	GPIOB-&gt;BSRR |= GPIO_BSRR_BS0;
	GPIOB-&gt;BSRR |= GPIO_BSRR_BR1;
	}
}
void TIM1_UP_TIM10_IRQHandler(void)
{
  TIM10-&gt;SR &amp;=~TIM_SR_UIF;
	static uint8_t i=0;
	if(++i==100) i=0;
	double s=sin(i*2*M_pi/100);
	buffer[0]='A';
	buffer[1]=i;
	buffer[2]=(int8_t)(s*100);
	if(1)
	{
	Send_buffer(buffer,3);
	}
}
void Init_tim9(uint16_t arr,uint16_t psc)
{
	//OPEN TIM9
	RCC-&gt;APB2ENR |=1&lt;&lt;16;
	TIM9-&gt;CNT=0;//CLEAR 
	TIM9-&gt;PSC = psc;
	TIM9-&gt;ARR = arr;
/*Allow update interrupt enable*/
	TIM9-&gt;DIER |= 1&lt;&lt;0;
/*Enable basic timer interrupt*/
  NVIC_EnableIRQ(TIM1_BRK_TIM9_IRQn);
/*Turn on counter enable*/
  TIM9-&gt;CR1 |= 1&lt;&lt;0;
}
void Init_tim10(uint16_t arr,uint16_t psc)
{
	//OPEN TIM10
	RCC-&gt;APB2ENR |=1&lt;&lt;17;
	TIM10-&gt;CNT=0;//CLEAR 
	TIM10-&gt;PSC = psc;
	TIM10-&gt;ARR = arr;
/*Allow update interrupt enable*/
	TIM10-&gt;DIER |= 1&lt;&lt;0;
/*Enable basic timer interrupt*/
  NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
/*Turn on counter enable*/
  TIM10-&gt;CR1 |= 1&lt;&lt;0;
}

int main()
{
	clock_set();
	usart2_Init(USART_BAUDRATE);
	Init_tim9(1000,84-1);//fre=84000000/84/1000    1000hz
	Init_tim10(10000,84-1);//fre=84000000/84/10000 100hz
while(1)
{}
}
</code></pre>
<h3 id="simulation">Simulation</h3>
<figure data-type="image" tabindex="5"><img src="https://liuxuejun123.github.io//post-images/1588173500577.PNG" alt="" loading="lazy"></figure>
<p>Press the switch to change the LED on and off</p>
<figure data-type="image" tabindex="6"><img src="https://liuxuejun123.github.io//post-images/1588173644598.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://liuxuejun123.github.io//post-images/1588173757806.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://liuxuejun123.github.io//post-images/1588173788729.PNG" alt="" loading="lazy"></figure>
<h2 id="conclusion">Conclusion</h2>
<p>Through this experiment, I learned the configuration of timers and the use of timer interrupts. And use Matlab simulink to observe the simulation situation through the virtual serial port. During the experiment, I also encountered some problems. Finding information through the Internet made me clearer about the whole process.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[STM32F401RE PWM输出]]></title>
        <id>https://liuxuejun123.github.io/post/stm32f401re-pwm-shu-chu/</id>
        <link href="https://liuxuejun123.github.io/post/stm32f401re-pwm-shu-chu/">
        </link>
        <updated>2020-04-14T09:06:39.000Z</updated>
        <content type="html"><![CDATA[<h1 id="task-requirements">Task requirements</h1>
<ol>
<li>Set flash memory latency.</li>
<li>Set PLL clock source.</li>
<li>Set PLL prescallers.</li>
<li>Enable PLL.</li>
<li>Set main clock source.</li>
<li>Start SysTick Timer with frequency 10kHz. Make SysTick interrupt handler.</li>
<li>In SysTick interrupt handler change state of GPIO pin.</li>
<li>In Proteus with oscilloscope evaluate output frequency from GPIO pin from previous step.</li>
</ol>
<h1 id="code">Code</h1>
<p>Two ways to Meet the requirements<br>
Code main part<br>
122</p>
<pre><code class="language-c">//2020.04.02
//code by Xuejun Liu
//pwm OUTPUT PD2
#include &quot;stm32f4xx.h&quot;
#include &quot;stm32f4xx_hal_gpio.h&quot;
#include &quot;stm32f4xx_hal_rcc.h&quot;
#define XTAL 16000000UL
//define busses prescalers
#define AHB_PRE 1
#define APB1_PRE 2
#define APB2_PRE 1
#define SysTickClk 20000
//calculate peripheral frequencies
#define SYSCLK 73000000
#define AHB SYSCLK/AHB_PRE
#define APB1 AHB/APB1_PRE
#define APB1_TIM APB1*2
#define APB2 AHB/APB2_PRE
#define APB2_TIM APB2*1
#define SysTicks AHB/SysTickClk
void gpio_init() //GPIO initialization
{
RCC-&gt;AHB1ENR|=RCC_AHB1ENR_GPIOAEN|//Turn on the clock of gpioa and gpiob and
gpiod
RCC_AHB1ENR_GPIOBEN|
RCC_AHB1ENR_GPIODEN;
GPIOB -&gt; MODER = 0x00005555;//GPIOB 0-7 output
GPIOD -&gt; MODER = 0x00000055;//GPIOD 0-3 OUTPUT
}
void clock_set()
{
FLASH-&gt;ACR|=FLASH_ACR_PRFTEN;
FLASH-&gt;ACR|=FLASH_ACR_LATENCY_2WS;//FLASH PREFETCH
RCC-&gt;CFGR&amp;=~RCC_CFGR_HPRE_Msk;
RCC-&gt;CFGR|=RCC_CFGR_HPRE_DIV1;
RCC-&gt;CFGR&amp;=~RCC_CFGR_PPRE1_Msk;
RCC-&gt;CFGR|=RCC_CFGR_PPRE1_DIV1;
RCC-&gt;CFGR&amp;=~RCC_CFGR_PPRE2_Msk;
RCC-&gt;CFGR|=RCC_CFGR_PPRE2_DIV1;//set AHB APB1 APB2
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLM_Msk;
RCC-&gt;PLLCFGR|=8&lt;&lt;RCC_PLLCFGR_PLLM_Pos;
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLN_Msk;
RCC-&gt;PLLCFGR|=73&lt;&lt;RCC_PLLCFGR_PLLN_Pos;
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLP_Msk; //SET PLLM PLLN PLLP
RCC-&gt;CR|=RCC_CR_PLLON;//OPEN PLL
while((RCC-&gt;CR&amp;RCC_CR_PLLRDY)==0)//WAIT PLL START
{}
RCC-&gt;CFGR&amp;=(uint32_t)((uint32_t)~(RCC_CFGR_SW));
RCC-&gt;CFGR|=RCC_CFGR_SW_PLL;
while((RCC-&gt;CFGR&amp;RCC_CFGR_SWS)!=RCC_CFGR_SWS_PLL)
{}
}
</code></pre>
<h2 id="method-1">Method 1</h2>
<pre><code class="language-c">void SysTick_Handler(void)
{
if(GPIOD-&gt;ODR&amp;GPIO_ODR_OD2)
{
GPIOD-&gt;BSRR|=GPIO_BSRR_BR2;
}
else
{
GPIOD-&gt;BSRR|=GPIO_BSRR_BS2;
}
}
int main()
{
clock_set();
gpio_init();
GPIOD-&gt;ODR=0X00000001;
SysTick_Config(SysTicks);
while(1)
{
};
}
</code></pre>
<h2 id="method-2">Method 2</h2>
<pre><code class="language-c">void MY_NVIC_SetVectorTable(uint32_t NVIC_VectTab,uint32_t Offset)
{
SCB-&gt;VTOR=NVIC_VectTab|(Offset&amp;(uint32_t)0xFFFFFE00);//Set the vector table
offset register of NVIC,
//the lower 9 bits of
vtor are reserved, that is, [8:0] is reserved.
}
//Set NVIC group
//NVIC_Group:NVIC group 0-4 5 groups in total
void MY_NVIC_PriorityGroupConfig(uint16_t NVIC_Group)
{
uint32_t temp,temp1;
temp1=(~NVIC_Group)&amp;0x07;//Take the last three position.
temp1&lt;&lt;=8;
temp=SCB-&gt;AIRCR; //Read previous settings
temp&amp;=0X0000F8FF; //clear previous group
temp|=0X05FA0000;
temp|=temp1;
SCB-&gt;AIRCR=temp;
}
//设置NVIC
//NVIC_PreemptionPriority:
//NVIC_SubPriority
//NVIC_Channel
//NVIC_Group
void MY_NVIC_Init(uint16_t NVIC_PreemptionPriority,uint16_t
NVIC_SubPriority,uint16_t NVIC_Channel,uint16_t NVIC_Group)
{
uint32_t temp;
MY_NVIC_PriorityGroupConfig(NVIC_Group);
temp=NVIC_PreemptionPriority&lt;&lt;(4-NVIC_Group);
temp|=NVIC_SubPriority&amp;(0x0f&gt;&gt;NVIC_Group);
temp&amp;=0xf;
NVIC-&gt;ISER[NVIC_Channel/32]|=1&lt;&lt;NVIC_Channel%32;
NVIC-&gt;IP[NVIC_Channel]|=temp&lt;&lt;4;
}
//Interrupt vector setting function
//Timer 3 interrupt service routine
void TIM3_IRQHandler(void)
{
if(TIM3-&gt;SR&amp;0X0001)//Overflow interrupt
{
if(GPIOD-&gt;ODR&amp;GPIO_ODR_OD2)
{
GPIOD-&gt;BSRR|=GPIO_BSRR_BR2;
}
else
{
GPIOD-&gt;BSRR|=GPIO_BSRR_BS2;
}
}
TIM3-&gt;SR&amp;=~(1&lt;&lt;0);//Clear interrupt flag bit
}
//Universal timer 3 interrupt initialization
//Here, the clock selection is 2 times of APB1, while APB1 is 36.5m
//arr
//psc：
//Calculation method of timer overflow time:Tout=((arr+1)*(psc+1))/Ft us.
void TIM3_Int_Init(uint16_t arr,uint16_t psc)
{
RCC-&gt;APB1ENR|=1&lt;&lt;1; //Tim3 clock enable
TIM3-&gt;ARR=arr;
TIM3-&gt;PSC=psc;
TIM3-&gt;DIER|=1&lt;&lt;0; //Allow update interrupt
TIM3-&gt;CR1|=0x01; //start tim3
MY_NVIC_Init(1,3,TIM3_IRQn,2); //Preempt 1, subpriority 3, group 2
}
int main()
{
clock_set();
gpio_init();
TIM3_Int_Init(73-1,50-1);//20khz
GPIOD-&gt;ODR=0X00000001;
while(1)
{
};
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[STM32F401 USART 串口通信]]></title>
        <id>https://liuxuejun123.github.io/post/stm32f401-usart-chuan-kou-tong-xin/</id>
        <link href="https://liuxuejun123.github.io/post/stm32f401-usart-chuan-kou-tong-xin/">
        </link>
        <updated>2020-04-13T08:49:43.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1functional-requirement">1.functional requirement</h2>
<ol>
<li>
<p>Create function for send byte packet(array) via USART. In this function you need:<br>
a. Set output array counter variable equal numbers of bytes for send;<br>
b. Enable interrupt on Transmit buffer empty event;</p>
</li>
<li>
<p>In the USART Interrupt Handler on TXE flag send next byte until end, on the end disable interrupt on TXE;</p>
</li>
<li>
<p>On pressing button, launch send function (which created in step 1) and send some array;</p>
</li>
<li>
<p>In the USART Interrupt Handler on RXNE flag read byte and turn on/off LED, if it values equal to you variant.</p>
</li>
</ol>
<h2 id="2imliementation-process">2.Imliementation process</h2>
<figure data-type="image" tabindex="1"><img src="https://liuxuejun123.github.io//post-images/1586767962203.PNG" alt="" loading="lazy"></figure>
<h3 id="i">I</h3>
<p>The serial port of urasrt2, PA2 is TX, PA3 is RX .Set PA2 PA3 to alternate function mode through MODER register, set to usart2 function through AFR register</p>
<p><img src="https://liuxuejun123.github.io//post-images/1586767970236.PNG" alt="" loading="lazy">!</p>
<h3 id="ii">II</h3>
<p>Through USART block diagram</p>
<h4 id="baud-rate-registerusart_brr">Baud rate register(USART_BRR)</h4>
<figure data-type="image" tabindex="2"><img src="https://liuxuejun123.github.io//post-images/1586768017916.PNG" alt="" loading="lazy"></figure>
<p>Used to divide the clock to get the required baud rate.</p>
<p>The baud rate register includes two parts defined: DIV_Mantissa (integer part) and DIV_Fraction (decimal part).</p>
<h4 id="status-register-sr">Status register (SR)</h4>
<figure data-type="image" tabindex="3"><img src="https://liuxuejun123.github.io//post-images/1586768026986.PNG" alt="" loading="lazy"></figure>
<p>The status register is suitable for detecting the state of the serial port at this time. The states it can detect are: send register empty bit, send complete bit, read data register non-empty bit, detected main line idle bit, overload error, etc.</p>
<p>Here we mainly focus on two bits: RXNE and TC (bits 5 and 6).</p>
<h5 id="bit-6-tc-transmission-complete">Bit 6 TC: Transmission complete</h5>
<p>This bit is set by hardware if the transmission of a frame containing data is complete and if<br>
TXE is set. An interrupt is generated if TCIE=1 in the USART_CR1 register. It is cleared by<br>
a software sequence (a read from the USART_SR register followed by a write to the<br>
USART_DR register). The TC bit can also be cleared by writing a '0' to it. This clearing<br>
sequence is recommended only for multibuffer communication.<br>
0: Transmission is not complete<br>
1: Transmission is complete</p>
<h5 id="bit-5-rxne-read-data-register-not-empty">Bit 5 RXNE: Read data register not empty</h5>
<p>This bit is set by hardware when the content of the RDR shift register has been transferred<br>
to the USART_DR register. An interrupt is generated if RXNEIE=1 in the USART_CR1<br>
register. It is cleared by a read to the USART_DR register. The RXNE flag can also be<br>
cleared by writing a zero to it. This clearing sequence is recommended only for multibuffer<br>
communication.<br>
0: Data is not received<br>
1: Received data is ready to be read.</p>
<h4 id="data-register-usart_dr">Data register (USART_DR)</h4>
<p>USART_DR actually contains two registers, one dedicated to TDR for sending and one dedicated to RDR for receiving. When sending data, writing data to USART_DR will be automatically stored in TDR; when reading data, reading data from USART_DR will automatically extract RDR data.</p>
<p>Serial communication transmits one bit at a time, so the TDR and RDR registers are between the system bus and the shift register; the TDR content is transferred to the transmit shift register when sending data, and the receive is when receiving data Each bit that arrives is sequentially stored in the receive shift register and then transferred to the RDR.</p>
<h4 id="control-register-1-usart_cr1">Control register 1 (USART_CR1)</h4>
<figure data-type="image" tabindex="4"><img src="https://liuxuejun123.github.io//post-images/1586768045079.PNG" alt="" loading="lazy"></figure>
<p>The control register is mainly used to set USART enable, check control enable, check selection (odd parity even check), PE interrupt enable, send buffer empty interrupt enable, send complete interrupt enable, receive buffer is not empty Enable, send enable, receive enable, word length, etc.</p>
<h3 id="iii-general-steps-of-serial-port-operation">III General steps of serial port operation</h3>
<p>1.GPIO clock enable, serial port clock enable<br>
2.Port mode setting under GPIO peripheral function<br>
3.Serial port parameter initialization<br>
4.Turn on interrupt and initialize NVIC</p>
<h2 id="code">Code</h2>
<pre><code class="language-c">#include &quot;stm32f4xx.h&quot;
#include &quot;stm32f4xx_hal_gpio.h&quot;
#include &quot;stm32f4xx_hal_rcc.h&quot;
#include &lt;stdio.h&gt;
//define busses prescalers
#define AHB_PRE 1
#define APB1_PRE 2
#define APB2_PRE 1
#define SysTickClk 10000
//calculate peripheral frequencies
#define SYSCLK 84000000
#define AHB SYSCLK/AHB_PRE
#define APB1 AHB/APB1_PRE
#define APB1_TIM APB1*2
#define APB2 AHB/APB2_PRE
#define APB2_TIM APB2*1
#define SysTicks AHB/SysTickClk

//usart
#define USART_BAUDRATE 19200
#define BUFFER_LENGTH 1000
uint16_t buffer_size=0,current_send_byte;
uint8_t buffer[BUFFER_LENGTH];

void clock_set()
{
FLASH-&gt;ACR|=FLASH_ACR_PRFTEN;
FLASH-&gt;ACR|=FLASH_ACR_LATENCY_2WS;//FLASH PREFETCH
RCC-&gt;CFGR&amp;=~RCC_CFGR_HPRE_Msk;
RCC-&gt;CFGR|=RCC_CFGR_HPRE_DIV1;
RCC-&gt;CFGR&amp;=~RCC_CFGR_PPRE1_Msk;
RCC-&gt;CFGR|=RCC_CFGR_PPRE1_DIV2;
RCC-&gt;CFGR&amp;=~RCC_CFGR_PPRE2_Msk;
RCC-&gt;CFGR|=RCC_CFGR_PPRE2_DIV1;//set AHB APB1 APB2
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLM_Msk;
RCC-&gt;PLLCFGR|=8&lt;&lt;RCC_PLLCFGR_PLLM_Pos;
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLN_Msk;
RCC-&gt;PLLCFGR|=84&lt;&lt;RCC_PLLCFGR_PLLN_Pos;
RCC-&gt;PLLCFGR&amp;=~RCC_PLLCFGR_PLLP_Msk; //SET PLLM PLLN PLLP
RCC-&gt;CR|=RCC_CR_PLLON;//OPEN PLL
while((RCC-&gt;CR&amp;RCC_CR_PLLRDY)==0)//WAIT PLL START
{}
RCC-&gt;CFGR&amp;=(uint32_t)((uint32_t)~(RCC_CFGR_SW));
RCC-&gt;CFGR|=RCC_CFGR_SW_PLL;
while((RCC-&gt;CFGR&amp;RCC_CFGR_SWS)!=RCC_CFGR_SWS_PLL)
{}
}

void usart2_Init(uint32_t baud)
{
RCC-&gt;AHB1ENR |= RCC_AHB1ENR_GPIOAEN|
	              RCC_AHB1ENR_GPIOBEN;//open clock
GPIOA-&gt;MODER =0x000000A0;//pa2 pa3 alternate function mode 
GPIOA-&gt;AFR[0]=0x00007700;//
GPIOB-&gt;MODER=0x00005555;//GPIOB
RCC-&gt;APB1ENR |= RCC_APB1ENR_USART2EN;//usart2 enable
USART2-&gt;BRR = APB1/baud;//Baud rate
USART2-&gt;CR1 = USART_CR1_UE|//usart2 enable
	            USART_CR1_TE|//
	            USART_CR1_RE|//Send and receive enable
	            USART_CR1_RXNEIE;//Interrupt enable
NVIC_EnableIRQ(USART2_IRQn);//配置中断		
}

void SendByte(uint8_t dat)
{
	USART2-&gt;DR = dat;
	while((USART2-&gt;SR &amp; USART_SR_TC) == 0);
}

void Send_buffer(uint8_t *buff,uint16_t count)
{
for (int i=0;i&lt;count;i++)
	{
		SendByte(*buff);
		*buff++;
	}
}
void delay_ms(uint16_t time)     
{    
  uint16_t i=0;    
  while(time--)     
  {    
    i=12000;    
    while(i--);    
  }    
}
void USART2_IRQHandler(void)
{
	if(USART2-&gt;SR &amp; USART_SR_RXNE)
	{
		buffer[buffer_size] = USART2-&gt;DR;
		buffer_size++;
		if(buffer[buffer_size-1] == 'k')
		{
			GPIOB-&gt;ODR &amp;= ~(1 &lt;&lt;0); //LEN0 OFF
			buffer_size = 0;
			USART2-&gt;CR1 &amp;= ~USART_CR1_RE;
		}
		else if(USART2-&gt;DR == 'l')
		{
			GPIOB-&gt;ODR |= 1 &lt;&lt; 0; // LED0 ON
			buffer_size = 0;
			USART2-&gt;CR1 &amp;= ~USART_CR1_RE;
		}
	}
}
int main()
{
	clock_set();
	usart2_Init(USART_BAUDRATE);
	uint8_t s[]=&quot;k off l open &quot;;
	current_send_byte=sizeof(s);
	GPIOB-&gt;ODR=0x00000000;//gpiob all pin low
	while(1)
	{

		 if(!(GPIOB-&gt;IDR &amp; GPIO_IDR_ID9))//if gpioa_pin9 low ,enter if function
			 {
			 delay_ms(5);                //Eliminate key jitter
			 if(!(GPIOB-&gt;IDR&amp;GPIO_IDR_ID9))
					{
						Send_buffer(s,current_send_byte);
						USART2-&gt;CR1 |= USART_CR1_RE;
						GPIOB-&gt;ODR |= 1 &lt;&lt; 1; // LED1 ON
						while(!(GPIOB-&gt;IDR&amp;GPIO_IDR_ID9));//Wait for  key to rebound                                                                       
					}
			 }
 
	}
}
</code></pre>
<h2 id="simulation">Simulation</h2>
<p>The devices in proteus are built as follows</p>
<figure data-type="image" tabindex="5"><img src="https://liuxuejun123.github.io//post-images/1586768061207.PNG" alt="" loading="lazy"></figure>
<p>Start the simulation, press the button, the LED lights up, and the serial port outputs information<br>
<img src="https://liuxuejun123.github.io//post-images/1586768067660.PNG" alt="" loading="lazy"></p>
<p>Keyboard input (small letter L) LED0 is on</p>
<figure data-type="image" tabindex="6"><img src="https://liuxuejun123.github.io//post-images/1586768074621.PNG" alt="" loading="lazy"></figure>
<p>Keyboard input k LED0 is off<br>
<img src="https://liuxuejun123.github.io//post-images/1586768081298.PNG" alt="" loading="lazy"></p>
<h2 id="conclusion">Conclusion</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ STM32F401RE 二进制加减器]]></title>
        <id>https://liuxuejun123.github.io/post/ren-wu-yi-stm32f401re-er-jin-zhi-jia-jian-qi/</id>
        <link href="https://liuxuejun123.github.io/post/ren-wu-yi-stm32f401re-er-jin-zhi-jia-jian-qi/">
        </link>
        <updated>2020-04-06T11:44:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1functional-requirement">1.functional requirement</h2>
<ul>
<li>
<p>In the initial state, all LEDs are off.</p>
</li>
<li>
<p>When you press «up» button, the value of the 8-bit number increases, the corresponding LEDs light up.</p>
</li>
<li>
<p>When you press «down» button, the value of the 8-bit number decreases, the corresponding LEDs light up.</p>
</li>
</ul>
<h2 id="2implementation-process">2.Implementation process</h2>
<h3 id="1hardware-circuit-construction">1.Hardware circuit construction</h3>
<p>​     We need 8 pins for connecting the LED, 2 pins for the switch, and the pin connected to the LED outputs high level to light up the LED,and the pin connected to the switch can be triggered by a low level.</p>
<p>The schematic diagram is as follows:<br>
<img src="https://liuxuejun123.github.io//post-images/1586173799153.PNG" alt="" loading="lazy"><br>
I chose PIN0-PIN7 of GPIOB as 8-bit LED output,adnPIN8 and PIN9 of GPIOA as key signal input.</p>
<h3 id="2port-initialization">2.Port initialization</h3>
<p>Set GPIOB_PIN0-PIN7 output mode,GPIOA_PIN8 and PIN9 input mode.</p>
<p>Looking up the technical manual, we can know the chip uses two bits of data in the register to control the mode of the port.</p>
<p>As shown below：<br>
<img src="https://liuxuejun123.github.io//post-images/1586173826302.PNG" alt="" loading="lazy"></p>
<p>we can known GPIOB MODER register control word is 0x000‭55550‬.</p>
<p>GPIOA MODER register control word is 0x00000000.</p>
<h3 id="3code">3.code</h3>
<pre><code class="language-c">#include&quot;stm32f4xx.h&quot;
void delay_ms(uint16_t time)//delay function
{    
   uint16_t i=0;  
   while(time--)
   {
      i=12000;  
      while(i--) ;    
   }
}
void gpio_init()           //GPIO initialization
{
RCC-&gt;AHB1ENR|=RCC_AHB1ENR_GPIOAEN|//Turn on the clock of gpioa and gpiob
	            RCC_AHB1ENR_GPIOBEN;
GPIOB -&gt; MODER = 0x00005555;//GPIOB 0-7  output
GPIOA -&gt; MODER = 0x00000000;//GPIOA INPUT
}
void LEDdisplay(int a)
{
	GPIOB-&gt;ODR=a;
}
unsigned char   a=0;//flag a=0x00 a 0~255;

int main()
{ 
   gpio_init();//GPIO initialization
   while(1){	
	
	           if(!(GPIOA-&gt;IDR&amp;GPIO_IDR_ID8))//if gpioa_pin8 low ,enter if function
	             {
		           delay_ms(5);                //Eliminate key jitter
		           if(!(GPIOA-&gt;IDR&amp;GPIO_IDR_ID8))
		              {
										a++;
										LEDdisplay(a);
										while(!(GPIOA-&gt;IDR&amp;GPIO_IDR_ID8));//Wait for the                                                                           key to rebound
		              }
	             }
             if(!(GPIOA-&gt;IDR&amp;GPIO_IDR_ID9))////Eliminate key jitter
							{
							delay_ms(5);   
							if(!(GPIOA-&gt;IDR&amp;GPIO_IDR_ID9))	
								 {  
									 a--;
								   LEDdisplay(a);
								   while(!(GPIOA-&gt;IDR&amp;GPIO_IDR_ID9));
								 }
							}
           }

}
</code></pre>
<h3 id="4experimental-results">4.Experimental results</h3>
<p>At the beginning of simulation, the initial value is 0, and the 8-bit LED is not on<br>
<img src="https://liuxuejun123.github.io//post-images/1586173840804.PNG" alt="" loading="lazy"></p>
<p>Press the ADDITION button to increase the value to 7. At this time, the eight bit LED displays its binary as follows</p>
<figure data-type="image" tabindex="1"><img src="https://liuxuejun123.github.io//post-images/1586173846367.PNG" alt="" loading="lazy"></figure>
<p>Press the SUBTRACTION button once, the value will be reduced to 6, and the LED will display as follows<br>
<img src="https://liuxuejun123.github.io//post-images/1586173853148.PNG" alt="" loading="lazy"></p>
<h2 id="conclusion">Conclusion</h2>
<p>Through this experiment, I learned the initialization of the io and the control of the high and low level of the io port, and learned to use the io pin to control other io.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[hello world]]></title>
        <id>https://liuxuejun123.github.io/post/hello-world/</id>
        <link href="https://liuxuejun123.github.io/post/hello-world/">
        </link>
        <updated>2020-04-06T09:26:33.000Z</updated>
        <content type="html"><![CDATA[<h2 id="开始我的博客">开始我的博客</h2>
]]></content>
    </entry>
</feed>